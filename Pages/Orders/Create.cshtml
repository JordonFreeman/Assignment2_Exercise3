@page
@model OrderManagement.RazorWeb.Pages.Orders.CreateModel
@{
    ViewData["Title"] = "Create Order";
}

<h2>Create Order</h2>

<form method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="form-group">
        <label asp-for="Order.OrderDate" class="control-label">Order Date</label>
        <input asp-for="Order.OrderDate" class="form-control" type="date" />
        <span asp-validation-for="Order.OrderDate" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Order.AgentID" class="control-label">Agent</label>
        <select asp-for="Order.AgentID" class="form-control" asp-items="Model.AgentList">
            <option value="">-- Select Agent --</option>
        </select>
        <span asp-validation-for="Order.AgentID" class="text-danger"></span>
    </div>

    <h4>Order Items</h4>
    <div id="orderItems">
        <div class="row form-group item-row">
            <div class="col-md-5">
                <select name="ItemIDs" class="form-control item-select">
                    <option value="">-- Select Item --</option>
                    @foreach (var item in Model.ItemList)
                    {
                        <option value="@item.Value" data-price="@item.Text.Split('|')[1]">
                            @item.Text.Split('|')[0]
                        </option>
                    }
                </select>
            </div>
            <div class="col-md-2">
                <input type="number" name="Quantities" class="form-control quantity-input" min="1" value="1" />
            </div>
            <div class="col-md-3">
                <span class="item-total">$0.00</span>
            </div>
            <div class="col-md-2">
                <button type="button" class="btn btn-danger btn-sm remove-item">Remove</button>
            </div>
        </div>
    </div>

    <div class="form-group">
        <button type="button" id="addItemBtn" class="btn btn-success">Add Another Item</button>
    </div>

    <div class="form-group">
        <label class="control-label">Total:</label>
        <span id="orderTotal" class="lead">$0.00</span>
    </div>

    <div class="form-group">
        <input type="submit" value="Create Order" class="btn btn-primary" />
        <a asp-page="Index" class="btn btn-secondary">Back to List</a>
    </div>
</form>

@section Scripts {
    <script>
        $(function() {
            // Calculate item total when quantity or item changes
            $(document).on('change', '.item-select, .quantity-input', function() {
                calculateTotal();
            });

            // Add another item row
            $('#addItemBtn').click(function() {
                var newRow = $('.item-row:first').clone();
                newRow.find('select').val('');
                newRow.find('input').val(1);
                newRow.find('.item-total').text('$0.00');
                $('#orderItems').append(newRow);
            });

            // Remove item row
            $(document).on('click', '.remove-item', function() {
                if ($('.item-row').length > 1) {
                    $(this).closest('.item-row').remove();
                    calculateTotal();
                }
            });

            // Calculate totals
            function calculateTotal() {
                var orderTotal = 0;

                $('.item-row').each(function() {
                    var row = $(this);
                    var itemSelect = row.find('.item-select');
                    var selectedOption = itemSelect.find('option:selected');
                    var price = parseFloat(selectedOption.data('price') || 0);
                    var quantity = parseInt(row.find('.quantity-input').val() || 0);
                    var total = price * quantity;

                    row.find('.item-total').text('$' + total.toFixed(2));
                    orderTotal += total;
                });

                $('#orderTotal').text('$' + orderTotal.toFixed(2));
            }
        });
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}